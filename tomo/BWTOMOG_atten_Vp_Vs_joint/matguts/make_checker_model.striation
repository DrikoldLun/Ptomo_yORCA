function [ checker_model ] = make_checker_model(par,dval)

mf = zeros(par.ny,par.nx,par.nz);


%% horiz spacing for upper layers
mfx = [0 1 1 0 -1 -1];
mfy = [0 1 1 0 -1 -1]';
%mfx = [ 0 1 1 1 0 -1 -1 -1];
mfx = repmat(mfx,1,30);
mfx1 = mfx(1:par.nx);

%mfy = [ 0 1 1 1 0 -1 -1 -1]';
mfy = repmat(mfy,30,1);
mfy1 = mfy(1:par.ny);

mfxy1 = zeros(par.ny,par.nx);
for i = 1:par.ny
    mfxy1(i,:) = mfx1(:);
    mfx1 = [mfx1(end) mfx1(1:end-1)];
end
mfxy1(:,:) = mfxy1(:,end:-1:1);
%% horiz spacing for lower layers
%mfx = [ 0 1 1 1 0 -1 -1 -1];
mfx = repmat(mfx,1,30);
mfx2 = mfx(1:par.nx);

%mfy = [ 0 1 1 1 0 -1 -1 -1]';
mfy = repmat(mfy,30,1);
mfy2 = mfy(1:par.ny);

mfxy2 = zeros(par.ny,par.nx);
for i = 1:par.ny
    mfxy2(i,:) = mfx2(:);
    mfx2 = [mfx2(end) mfx2(1:end-1)];
end
mfxy2(:,:) = mfxy2(:,end:-1:1);
%mfxy2 = mfy2*mfx2; % 2D grid

%% vertical spacing
%mfz = [ 0  1  1  1  0  0 -1 -1  -1  0 0 1 1 1 ];
mfz = [1 1 0 1 1 0];
%mfz = [ 0  0  1  1  1  0 0 -1  -1  -1 0 0 0 0 ];
%mfz = [ 0  0  1  1  1  0 0 0  0  0 0 0 0 0 ];
mfz = repmat(mfz,1,10);
%mfz = cat(mfz,flip(mfz));
mfz = mfz(1:par.nz);

%% now rep over layers
for iz = 1:par.nz
    if iz < 5
        mfxy = mfxy1; 
    else
        mfxy = mfxy2;
    end
    mf(:,:,iz) = mfxy*mfz(iz);
end

mval = (0.01*dval)*mf(:); % 0.01 to convert from percent


%add a little random noise
% mval = mval + random('norm',0,0.00001,size(mval));

checker_model.mval = mval;
   
